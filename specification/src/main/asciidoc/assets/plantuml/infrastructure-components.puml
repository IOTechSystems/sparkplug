@startuml
/'
 ' The "left to right direction" directive below changes how the engine renders the diagram. 
 '  
 ' Since the default layout is "top to bottom", we need to specify directions that take into account
 ' the global change in orientation. So, below, "right" means "up" and "up" means "left".
 '
 ' The order of the associations also influences the rendering order.
 '
 ' Unfortunately, the AsciiDoctor PlantUML plugin dfoes not invoke the PlantUMP pre-processor.
 ' The consequence is that we have lots of redundant markup instead of clean procedures below.
 '/
left to right direction 
hide stereotype
skinparam linetype polyline
skinparam nodesep 30
skinparam ranksep 40
skinparam defaultTextAlignment center
skinparam monochrome true

skinparam rectangle {
	BackgroundColor #white
}

skinparam rectangle<<standby>> {
	BackgroundColor #lightgrey
}

skinparam rectangle<<textBlock>> {
	BackgroundColor #white
	BorderThickness 0
	BorderColor transparent
	FontSize 36
	Shadowing false
}

skinparam rectangle<<spacer>> {
	BackgroundColor #white
	FontColor #white
	BorderThickness 0
	BorderColor transparent
	FontSize 36
	Shadowing 0.0
}


skinparam card {
	BackgroundColor #white
    FontSize 12
    BorderThickness 1
    Padding 0
}

skinparam package {
    Style rectangle
}


package "Security" {

	together {
		rectangle SCADA [
			===""Primary Application""
	    	"" ""
			""(Sparkplug)""
		]
		rectangle SCADAStandby<<standby>> [
			===""Primary Application""
	    	""Standby""
			""(Sparkplug)""
		]
		rectangle MQTTServer [
			==""MQTT Server""
		] 
	}
	
	together {
		rectangle MES [
		===""MES""
		""(Sparkplug)""
		]
		rectangle Historian [
		===""Historian""
		""(Sparkplug)""
		]
		rectangle Analytics [
		===""Analytics""
		""(Sparkplug)""
		]
	}
	
	together {
		rectangle Node1 [
		===""Edge Node""
		""(Sparkplug)""
		]
		
		card Node1Device1 [
			""    Device     ""
		]
		card Node1Sensor1 [
			""    Sensor     ""
		]
		card Node1Device2 [
			""    Device     ""
		]
	}
	
	together {
		rectangle Node2 [
		===""Edge Node""
		""(Sparkplug)""
		]	
		card Node2Device [
			""    Device     ""
		]
	}
	
	together {
		rectangle Node3 [
		===""Edge Node""
		""(Sparkplug)""
		]		
		card Node3Device [
			""    Device     ""
		]
	}
	
	together {
		rectangle Node4 [
		===""Edge Node""
		""(Sparkplug)""
		]
		card Node420maInput1 [
			"" 4-20ma Input ""
		]
		card Node420maInput2 [
			"" 4-20ma Input ""
		]
		card Node4DigitalInput [
			""Digital Input ""
		]
		card Node4DigitalOutput [
			""Digital Output""
		]
	}
	
	together {
		rectangle "OT" <<textBlock>> as OT
     	rectangle "IT" <<textBlock>> as IT
		
	 }
	
	[MQTTServer] <-left--> [SCADAStandby]
	[MQTTServer] <-right--> [SCADA]
	
	[MQTTServer] -up--> [Analytics]
	[MQTTServer] -up--> [Historian]
	[MQTTServer] -up--> [MES]
	
	[MQTTServer] <-down---> [Node1]
	[MQTTServer] <-down---> [Node2]
	[MQTTServer] <-down---> [Node3]
	[MQTTServer] <-down---> [Node4]
	
	[Node1] -down-- [Node1Device1]
	[Node1] -down-- [Node1Sensor1]
	[Node1] -down-- [Node1Device2]
	
	[Node2] -down-- [Node2Device]
	
	[Node3] -down-- [Node3Device]
	
	[Node4] -down-- [Node420maInput1]
	[Node4] -down-- [Node420maInput2]
	[Node4] -down-- [Node4DigitalInput]
	[Node4] -down-- [Node4DigitalOutput]
	
	[OT] -[hidden]up----- [IT]
}

@enduml
