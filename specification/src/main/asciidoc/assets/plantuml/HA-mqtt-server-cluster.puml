@startuml
/'
 ' The "left to right direction" directive below changes how the engine renders the diagram. 
 '  
 ' Since the default layout is "top to bottom", we need to specify directions that take into account
 ' the global change in orientation. So, below, "right" means "up" and "up" means "left".
 '
 ' The order of the associations also influences the rendering order.
 '
 ' Unfortunately, the AsciiDoctor PlantUML plugin dfoes not invoke the PlantUMP pre-processor.
 ' The consequence is that we have lots of redundant markup instead of clean procedures below.
 '/
left to right direction 
hide stereotype
skinparam linetype polyline
skinparam nodesep 40
skinparam ranksep 20
skinparam defaultTextAlignment center
skinparam monochrome true

skinparam rectangle {
	BackgroundColor #white
}

skinparam rectangle<<mqttserver>> {
	BackgroundColor #lightgrey
}

skinparam rectangle<<textBlock>> {
	BackgroundColor #white
	BorderThickness 0
	BorderColor transparent
	FontSize 28
	Shadowing false
}


together {
	rectangle "MQTT Server" <<textBlock>> as MQTTServerLabel
	rectangle EdgeNodeMQTTNode<<mqttserver>> [
		===""  ""
	]
	rectangle DeviceMQTTNode<<mqttserver>> [
		===""  ""
	]
	rectangle PrimaryHostMQTTNode<<mqttserver>> [
		===""  ""
	]
}

together {
	rectangle EdgeNode [
		"" ""
		===""MQTT Edge""
		===""    Node    ""
    	"" ""
	]
	rectangle Device [
		"" ""
		===""MQTT Enabled""
		===""Device""
    	"" ""
	]
}

rectangle PrimaryHost [
	"" ""
	===""Primary Host""
	===""Application""
   	"" ""
]

[EdgeNodeMQTTNode]--left- [DeviceMQTTNode]
[DeviceMQTTNode] --down- [PrimaryHostMQTTNode] 
[EdgeNodeMQTTNode] --down- [PrimaryHostMQTTNode]


[PrimaryHostMQTTNode] <--down--> [PrimaryHost]

[DeviceMQTTNode] <--up--> [Device]

[EdgeNodeMQTTNode] <--up--> [EdgeNode]	
	

@enduml
